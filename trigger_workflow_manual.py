#!/usr/bin/env python3
"""
Activador manual de workflow GitHub Actions para reactivar cron schedules
"""
import requests
import json
import os

def trigger_workflow_manually():
    """Ejecuta manualmente el workflow para reactivar el cron schedule"""
    
    # Configuraci√≥n
    repo = "XinhoGOD/Fantasy"
    workflow_file = "nfl-scraper-30min.yml"
    
    print("üîÑ REACTIVACI√ìN MANUAL DE GITHUB ACTIONS")
    print("=" * 50)
    print(f"üìÇ Repositorio: {repo}")
    print(f"‚öôÔ∏è Workflow: {workflow_file}")
    print()
    
    # GitHub requiere un token para trigger workflows
    # Por seguridad, esto se hace mejor desde la UI de GitHub
    print("üí° INSTRUCCIONES PARA REACTIVACI√ìN MANUAL:")
    print()
    print("1Ô∏è‚É£ Ve a GitHub.com")
    print(f"2Ô∏è‚É£ Navega a: https://github.com/{repo}")
    print("3Ô∏è‚É£ Ve a la pesta√±a 'Actions'")
    print("4Ô∏è‚É£ Busca el workflow: 'üèà NFL Fantasy Scraper 24/7 - Cada 30 Minutos'")
    print("5Ô∏è‚É£ Haz click en 'Run workflow' (bot√≥n azul)")
    print("6Ô∏è‚É£ Deja las opciones por defecto y haz click en 'Run workflow'")
    print()
    print("‚úÖ RESULTADO ESPERADO:")
    print("   ‚Ä¢ El workflow se ejecutar√° inmediatamente")
    print("   ‚Ä¢ Los cron schedules se reactivar√°n autom√°ticamente")  
    print("   ‚Ä¢ Empezar√° a ejecutarse cada 30 minutos de nuevo")
    print()
    print("üîç VERIFICACI√ìN:")
    print("   ‚Ä¢ Espera 30-60 minutos")
    print("   ‚Ä¢ Verifica que aparezcan nuevas ejecuciones autom√°ticas")
    print("   ‚Ä¢ Las ejecuciones tendr√°n 'Event: schedule' en lugar de 'workflow_dispatch'")
    print()
    print("üìã ALTERNATIVA DESDE URL DIRECTA:")
    print(f"   https://github.com/{repo}/actions/workflows/{workflow_file}")

if __name__ == "__main__":
    trigger_workflow_manually()
